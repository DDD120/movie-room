{"version":3,"file":"static/js/38.06b95eb8.chunk.js","mappings":"8LAIMA,EAAOC,EAAAA,EAAAA,MAAH,+nBASKC,EAAAA,GAAAA,KACOC,EAAAA,GAAAA,OAQSA,EAAAA,GAAAA,OAEQA,EAAAA,GAAAA,QAKnC,qBAAGC,SAEHC,EAAAA,EAAAA,IADM,2OAGgBF,EAAAA,GAAAA,SAe1B,IAJkB,SAAC,GAA2B,IAAzBG,EAAwB,EAAxBA,SAAaC,GAAW,YAC3C,OAAO,SAACP,GAAD,kBAAUM,GAAcC,M,0EC7BjC,IAZwB,WAAO,IAAD,EAC5B,GAAuBC,EAAAA,EAAAA,MACjBC,EAAI,WADV,eAC0BC,IAAI,eAApB,QAA+B,IACnCC,GAAWC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAA5CH,YAERI,EAAAA,EAAAA,YAAU,WACHJ,GACLF,EAASF,KACR,CAACI,EAAYF,EAAUF,M,sMCCtBT,EAAOC,EAAAA,EAAAA,IAAH,yHAOJiB,EAAOjB,EAAAA,EAAAA,IAAH,iGAQJkB,EAAOlB,EAAAA,EAAAA,GAAH,iGAEKC,EAAAA,GAAAA,GACJC,EAAAA,GAAAA,OAILiB,EAAOnB,EAAAA,EAAAA,KAAH,6GAOJoB,EAASpB,EAAAA,EAAAA,KAAH,mEAsEZ,UAjEc,WAAO,IAAD,EAClB,GAIIqB,EAAAA,EAAAA,MAHFhB,EADF,EACEA,SACAiB,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,aAEf,GACEE,EAAAA,EAAAA,MADF,eAAOC,EAAP,gBAAgBC,KAAMC,OAAtB,MAAiC,GAAjC,EAAqCC,EAArC,EAAqCA,UAAWC,EAAhD,EAAgDA,QAASC,EAAzD,EAAyDA,MAGnDC,GAAWC,EAAAA,EAAAA,MACjB,GAAuB1B,EAAAA,EAAAA,MACjBC,EAAI,WADV,eAC0BC,IAAI,eAApB,QAA+B,KACzCyB,EAAAA,EAAAA,KAEA,IAAMC,EAAY,iBAAsB,MAAT3B,EAAe,GAAf,gBAA6BA,IAc5D,OARAQ,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACVa,IACFG,GAASI,EAAAA,EAAAA,IAAW,CAAErB,KAAMa,EAASb,SACrCsB,EAAAA,EAAAA,GAAS,OAACT,QAAD,IAACA,OAAD,EAACA,EAAUU,UAElBR,IAASO,EAAAA,EAAAA,GAAS,UAACN,EAAMJ,YAAP,aAAC,EAAYW,WAClC,CAACV,EAAUC,EAAWG,EAAUF,EAASC,KAG1C,SAAC,IAAD,WACE,UAAChC,EAAD,YACE,SAACkB,EAAD,WACE,gBAAKsB,IAAKC,EAASC,IAAI,+BAEzB,SAACvB,EAAD,kCACA,UAACC,EAAD,CAAMuB,SAAUpB,GAnBI,SAAC,GAAyB,IAAvBqB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClClB,EAAM,CAAEiB,MAAAA,EAAOC,SAAAA,OAkBX,WACE,SAAC,IAAD,CACEvC,SAAUA,EAAS,QAAS,CAAEwC,UAAU,IACxCC,KAAK,QACLC,MAAM,qBACNC,YAAY,qBACZC,WAAS,KAEX,SAAC,IAAD,CACE5C,SAAUA,EAAS,WAAY,CAAEwC,UAAU,IAC3CC,KAAK,WACLC,MAAM,2BACNC,YAAY,8BAEd,SAAC,IAAD,CACE7C,QAAM,EACN2C,KAAK,SACLC,MAAM,qBACNG,MAAM,qBACNC,SAAU5B,QAGd,SAAC,KAAD,CAAM6B,GAAIjB,EAAV,UACE,SAACf,EAAD","sources":["components/common/AuthInput.jsx","hooks/useAuthRedirect.js","pages/Login.jsx"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { colors, fontSize } from \"styles/common\";\n\nconst Base = styled.input`\n  margin: 4px auto;\n  max-width: 600px;\n  width: 100%;\n  border-radius: 50px;\n  padding: 14px 30px;\n  border: none;\n  box-shadow: none;\n  color: #fff;\n  font-size: ${fontSize.base};\n  background-color: ${colors.orange};\n  &::placeholder {\n    color: #fff;\n  }\n  &:-webkit-autofill,\n  :-webkit-autofill:hover,\n  :-webkit-autofill:focus,\n  :-webkit-autofill:active {\n    box-shadow: 0 0 0 1000px ${colors.orange} inset;\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-box-shadow: 0 0 0 1000px ${colors.orange} inset;\n    -webkit-text-fill-color: #fff;\n    -webkit-transition: background-color 5000s ease-in-out 0s;\n  }\n\n  ${({ submit }) =>\n    submit &&\n    css`\n      cursor: pointer;\n      background-color: ${colors.cyan};\n      transition: filter 0.3s;\n      &:hover {\n        filter: brightness(0.9);\n      }\n      &:disabled {\n        filter: grayscale(0.9);\n      }\n    `}\n`;\n\nconst AuthInput = ({ register, ...rest }) => {\n  return <Base {...register} {...rest} />;\n};\n\nexport default AuthInput;\n","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\n\nconst useAuthRedirect = () => {\n  const [searchParams] = useSearchParams();\n  const next = searchParams.get(\"next\") ?? \"/\";\n  const navigate = useNavigate();\n  const { isLoggedIn } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n    navigate(next);\n  }, [isLoggedIn, navigate, next]);\n};\n\nexport default useAuthRedirect;\n","import styled from \"@emotion/styled\";\nimport Container from \"components/common/Container\";\nimport { colors, fontSize } from \"styles/common\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { useLoginMutation } from \"apis/server-api\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login as storeLogin } from \"store/user\";\nimport { useForm } from \"react-hook-form\";\nimport { showToast } from \"lib/toast\";\nimport AuthInput from \"components/common/AuthInput\";\nimport LogoImg from \"assets/logo.png\";\nimport useAuthRedirect from \"hooks/useAuthRedirect\";\n\nconst Base = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  width: 200px;\n  margin: 40px 0 10px;\n  img {\n    width: 100%;\n  }\n`;\n\nconst Head = styled.h1`\n  font-weight: 700;\n  font-size: ${fontSize.lg};\n  color: ${colors.black};\n  margin: 10px 0;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Signin = styled.span`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nconst Login = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = useForm();\n  const [login, { data: loginRes = {}, isSuccess, isError, error }] =\n    useLoginMutation();\n\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n  const next = searchParams.get(\"next\") ?? \"/\";\n  useAuthRedirect();\n\n  const toSignupPath = `/signup${next === \"/\" ? \"\" : `?next=${next}`}`;\n\n  const handleLoginSubmit = ({ email, password }) => {\n    login({ email, password });\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(storeLogin({ user: loginRes.user }));\n      showToast(loginRes?.message);\n    }\n    if (isError) showToast(error.data?.message);\n  }, [loginRes, isSuccess, dispatch, isError, error]);\n\n  return (\n    <Container>\n      <Base>\n        <Logo>\n          <img src={LogoImg} alt=\"MOVIE ROOM 로고\" />\n        </Logo>\n        <Head>로그인</Head>\n        <Form onSubmit={handleSubmit(handleLoginSubmit)}>\n          <AuthInput\n            register={register(\"email\", { required: true })}\n            type=\"email\"\n            title=\"이메일\"\n            placeholder=\"이메일\"\n            autoFocus\n          />\n          <AuthInput\n            register={register(\"password\", { required: true })}\n            type=\"password\"\n            title=\"비밀번호\"\n            placeholder=\"비밀번호\"\n          />\n          <AuthInput\n            submit\n            type=\"submit\"\n            title=\"로그인\"\n            value=\"로그인\"\n            disabled={isSubmitting}\n          />\n        </Form>\n        <Link to={toSignupPath}>\n          <Signin>회원가입</Signin>\n        </Link>\n      </Base>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["Base","styled","fontSize","colors","submit","css","register","rest","useSearchParams","next","get","navigate","useNavigate","isLoggedIn","useSelector","state","user","useEffect","Logo","Head","Form","Signin","useForm","handleSubmit","isSubmitting","formState","useLoginMutation","login","data","loginRes","isSuccess","isError","error","dispatch","useDispatch","useAuthRedirect","toSignupPath","storeLogin","showToast","message","src","LogoImg","alt","onSubmit","email","password","required","type","title","placeholder","autoFocus","value","disabled","to"],"sourceRoot":""}