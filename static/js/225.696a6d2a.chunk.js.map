{"version":3,"file":"static/js/225.696a6d2a.chunk.js","mappings":"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","sources":["components/common/Carousel.jsx","components/common/CarouselBox.jsx","components/common/CarouselItem.jsx","components/common/MovieCard.jsx","components/common/MovieListCarousel.jsx","components/common/Title.jsx","components/common/ToTop.jsx","components/loading/SkeletonCarousel.jsx","hooks/useIntersectionObserver.js","components/main/HeroBanner.jsx","components/main/MovieList.jsx","pages/Main.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { useEffect, useState } from \"react\";\nimport { RiArrowDropLeftLine, RiArrowDropRightLine } from \"react-icons/ri\";\nimport { breakpoint, colors, fontSize } from \"styles/common\";\nimport Title from \"./Title\";\nimport { isMobile } from \"react-device-detect\";\n\nconst Base = styled.div`\n  margin: 40px 0;\n`;\n\nconst Box = styled.div`\n  position: relative;\n`;\n\nconst ArrowBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  transition: 0.2s;\n  transform: translateY(-50%);\n  z-index: 1;\n  font-size: ${fontSize.xl};\n  font-weight: bold;\n  border-radius: 50%;\n  background-color: transparent;\n  color: ${colors.black};\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: ${({ left }) => left && \"-48px\"};\n  right: ${({ right }) => right && \"-48px\"};\n  &:hover {\n    color: ${colors.orange};\n  }\n\n  @media only screen and (max-width: ${breakpoint.md}) {\n    display: none;\n  }\n`;\n\nconst CarouselList = styled.ul`\n  display: flex;\n  padding: 24px 0;\n  overflow: auto;\n  scroll-snap-type: x mandatory;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst Carousel = ({\n  name,\n  activeIndex,\n  setActiveIndex,\n  itemCount,\n  showCount,\n  children,\n}) => {\n  const [isShowLeftBtn, setIsShowLeftBtn] = useState(false);\n  const [isShowRightBtn, setIsShowRightBtn] = useState(true);\n\n  useEffect(() => {\n    activeIndex ? setIsShowLeftBtn(true) : setIsShowLeftBtn(false);\n    activeIndex + showCount < itemCount\n      ? setIsShowRightBtn(true)\n      : setIsShowRightBtn(false);\n  }, [activeIndex, itemCount, showCount]);\n\n  const handlePreClick = () => {\n    setActiveIndex((activeIndex) => activeIndex - showCount);\n  };\n\n  const handleNextClick = () => {\n    if (activeIndex < itemCount) {\n      setActiveIndex((activeIndex) => activeIndex + showCount);\n    }\n  };\n\n  return (\n    <Base>\n      {itemCount > 0 && (\n        <>\n          <Title>{name}</Title>\n          <Box>\n            {!isMobile && isShowLeftBtn && (\n              <ArrowBtn left onClick={handlePreClick}>\n                <RiArrowDropLeftLine />\n              </ArrowBtn>\n            )}\n            <CarouselList>{children}</CarouselList>\n            {!isMobile && isShowRightBtn && (\n              <ArrowBtn right onClick={handleNextClick}>\n                <RiArrowDropRightLine />\n              </ArrowBtn>\n            )}\n          </Box>\n        </>\n      )}\n    </Base>\n  );\n};\n\nexport default Carousel;\n","import styled from \"@emotion/styled\";\n\nconst Base = styled.section`\n  margin: 0 0 120px 0;\n`;\n\nconst CarouselBox = ({ children }) => {\n  return <Base>{children}</Base>;\n};\n\nexport default CarouselBox;\n","import styled from \"@emotion/styled\";\nimport { breakpoint } from \"styles/common\";\nimport { motion } from \"framer-motion\";\n\nconst Base = styled(motion.li)`\n  width: ${({ showcount }) => showcount && `calc(100%/${showcount})`};\n  padding: 0 4px;\n  flex: 0 0 ${({ showcount }) => showcount && `calc(100%/${showcount})`};\n  transform: ${({ activeindex }) =>\n    activeindex && `translateX(-${activeindex * 100}%)`};\n  scroll-snap-align: start;\n  img {\n    width: 100%;\n  }\n\n  @media only screen and (max-width: ${breakpoint.md}) {\n    width: ${({ showcount }) => showcount && `calc(100%/${showcount - 2})`};\n    flex: 0 0 ${({ showcount }) => showcount && `calc(100%/${showcount - 2})`};\n  }\n`;\n\nconst CarouselItem = ({ children, activeIndex, showCount }) => {\n  return (\n    <Base showcount={showCount} activeindex={activeIndex}>\n      {children}\n    </Base>\n  );\n};\n\nexport default CarouselItem;\n","import styled from \"@emotion/styled\";\nimport { colors, fontSize } from \"styles/common\";\nimport { Link } from \"react-router-dom\";\nimport NoImg from \"./NoImg\";\nimport { getYear } from \"lib/filter\";\nimport { motion } from \"framer-motion\";\n\nconst Base = styled.div`\n  cursor: pointer;\n`;\n\nconst ImgBox = styled.div`\n  position: relative;\n  aspect-ratio: 1 / 1.416;\n  width: 100%;\n  overflow: hidden;\n  margin-bottom: 6px;\n  border-radius: 12px;\n`;\n\nconst Img = styled(motion.img)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  aspect-ratio: 1 / 1.416;\n  border-radius: 12px;\n  object-fit: cover;\n`;\n\nconst Title = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst Year = styled.div`\n  font-size: ${fontSize.sm};\n  color: ${colors.grey};\n`;\n\nconst MovieCard = ({ poster_path, title, release_date, id }) => {\n  return (\n    <motion.div whileHover={{ y: -5 }}>\n      <Link to={`/detail/${id}`}>\n        <Base>\n          <ImgBox>\n            {poster_path ? (\n              <Img\n                src={`${process.env.REACT_APP_THE_MOVIE_DB_IMG_BASE_URL}${poster_path}`}\n                alt={`${title} 포스터`}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{\n                  ease: \"easeInOut\",\n                }}\n              />\n            ) : (\n              <NoImg />\n            )}\n          </ImgBox>\n          <Title>{title}</Title>\n          <Year>{getYear(release_date)}</Year>\n        </Base>\n      </Link>\n    </motion.div>\n  );\n};\n\nexport default MovieCard;\n","import Carousel from \"components/common/Carousel\";\nimport MovieCard from \"components/common/MovieCard\";\nimport { useEffect, useState } from \"react\";\nimport CarouselItem from \"./CarouselItem\";\n\nconst MovieListCarousel = ({ name, movieList }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  useEffect(() => {\n    setActiveIndex(0);\n  }, [movieList]);\n\n  return (\n    <Carousel\n      name={name}\n      itemCount={movieList?.length}\n      activeIndex={activeIndex}\n      setActiveIndex={setActiveIndex}\n      showCount={5}\n    >\n      {movieList?.map((movie) => (\n        <CarouselItem showCount={5} activeIndex={activeIndex} key={movie.id}>\n          <MovieCard\n            id={movie.id}\n            poster_path={movie.poster_path}\n            title={movie.title}\n            release_date={movie.release_date}\n          />\n        </CarouselItem>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default MovieListCarousel;\n","import styled from \"@emotion/styled\";\nimport { colors, fontSize } from \"styles/common\";\n\nconst Base = styled.span`\n  padding: 4px 14px 6px;\n  font-size: ${fontSize.base};\n  background-color: #1a3642;\n  color: ${colors.white};\n  border-radius: 50px;\n`;\n\nconst Title = ({ children }) => {\n  return <Base>{children}</Base>;\n};\n\nexport default Title;\n","import { RiArrowDropUpLine } from \"react-icons/ri\";\nimport styled from \"@emotion/styled\";\nimport { colors, fontSize } from \"styles/common\";\n\nconst Base = styled.button`\n  position: fixed;\n  right: 30px;\n  bottom: 30px;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  color: ${colors.orange};\n  font-size: ${fontSize.xl};\n  border: none;\n  background-color: ${colors.black};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  z-index: 9;\n  transition: 0.2s;\n  opacity: ${({ isShow }) => (isShow ? 1 : 0)};\n  pointer-events: ${({ isShow }) => (isShow ? \"auto\" : \"none\")};\n  &:hover {\n    color: ${colors.black};\n    background-color: ${colors.orange};\n  }\n`;\n\nconst ToTop = ({ isShow }) => {\n  return (\n    <Base\n      type=\"button\"\n      onClick={() => window.scrollTo(0, 0)}\n      isShow={isShow}\n      aria-label=\"Top 버튼\"\n    >\n      <RiArrowDropUpLine />\n    </Base>\n  );\n};\n\nexport default ToTop;\n","import styled from \"@emotion/styled\";\nimport { breakpoint, colors } from \"styles/common\";\n\nconst Base = styled.div`\n  margin: 40px 0;\n`;\n\nconst Title = styled.div`\n  width: 100px;\n  height: 40px;\n  background-color: ${colors.grey};\n  border-radius: 50px;\n`;\n\nconst CarouselList = styled.ul`\n  display: flex;\n  padding: 24px 0;\n  overflow: hidden;\n`;\n\nconst CarouselItem = styled.li`\n  width: 20%;\n  padding: 0 4px;\n  flex: 0 0 20%;\n  overflow: hidden;\n  border-radius: 12px;\n\n  @media only screen and (max-width: ${breakpoint.md}) {\n    width: 33.3%;\n    flex: 0 0 33.3%;\n  }\n`;\n\nconst Img = styled.div`\n  position: relative;\n  aspect-ratio: 1 / 1.416;\n  width: 100%;\n  overflow: hidden;\n  background-color: ${colors.lightgray};\n  margin-bottom: 6px;\n  border-radius: 12px;\n`;\n\nfunction SkeletonCarousel() {\n  return (\n    <Base>\n      <Title />\n      <CarouselList>\n        <CarouselItem>\n          <Img />\n        </CarouselItem>\n        <CarouselItem>\n          <Img />\n        </CarouselItem>\n        <CarouselItem>\n          <Img />\n        </CarouselItem>\n        {window.innerWidth > 864 && (\n          <>\n            <CarouselItem>\n              <Img />\n            </CarouselItem>\n            <CarouselItem>\n              <Img />\n            </CarouselItem>\n          </>\n        )}\n      </CarouselList>\n    </Base>\n  );\n}\n\nexport default SkeletonCarousel;\n","import { useEffect, useState } from \"react\";\n\nconst useIntersectionObserver = ({ onIntersect }) => {\n  const [target, setTarget] = useState(null);\n\n  useEffect(() => {\n    if (!target) return;\n    const observer = new IntersectionObserver(onIntersect);\n    observer.observe(target);\n    return () => observer.unobserve(target);\n  }, [onIntersect, target]);\n\n  return { setTarget };\n};\n\nexport default useIntersectionObserver;\n","import styled from \"@emotion/styled\";\nimport { breakpoint, colors, fontSize } from \"styles/common\";\nimport { MdLocalMovies } from \"react-icons/md\";\nimport LogoImg from \"assets/logo.png\";\nimport HeroBannerImg from \"assets/hero-banner.png\";\n\nconst Base = styled.article`\n  margin: 40px auto;\n  max-width: 1200px;\n  width: 100%;\n  aspect-ratio: 9/3;\n  border-radius: 20px;\n  background: url(${HeroBannerImg}) no-repeat right;\n  background-size: contain;\n  display: flex;\n  align-items: center;\n  font-size: ${fontSize.base};\n\n  @media only screen and (max-width: ${breakpoint.sm}) {\n    background: none;\n  }\n`;\n\nconst Box = styled.div`\n  width: 60%;\n\n  @media only screen and (max-width: ${breakpoint.sm}) {\n    width: 100%;\n  }\n`;\nconst TitleBox = styled.div`\n  font-size: ${fontSize.md};\n  color: ${colors.black};\n  display: flex;\n  align-items: center;\n`;\nconst Title = styled.span`\n  width: 150px;\n\n  img {\n    width: 100%;\n  }\n\n  @media only screen and (max-width: ${breakpoint.md}) {\n    width: 120px;\n    transform: translateY(-2px);\n  }\n`;\nconst Phrase = styled.p`\n  font-size: ${fontSize[\"2xl\"]};\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 900;\n  color: ${colors.black};\n  line-height: 1.1;\n  position: relative;\n  left: -1px;\n  margin-bottom: 4px;\n\n  @media only screen and (max-width: ${breakpoint.md}) {\n    font-size: ${fontSize.xl};\n  }\n`;\nconst List = styled.li`\n  position: relative;\n  margin-left: 10px;\n  @media only screen and (max-width: ${breakpoint.md}) {\n    font-size: ${fontSize.sm};\n  }\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 4px;\n    left: -8px;\n    width: 4px;\n    height: 16px;\n    background-color: ${colors.orange};\n    @media only screen and (max-width: ${breakpoint.md}) {\n      height: 10px;\n      top: 8px;\n    }\n  }\n`;\n\nconst HeroBanner = ({ target }) => {\n  return (\n    <Base ref={target}>\n      <Box>\n        <TitleBox>\n          <MdLocalMovies />\n          <Title>\n            <img src={LogoImg} alt=\"MOVIE ROOM 로고\" />\n          </Title>\n        </TitleBox>\n        <Phrase>Movie For You!</Phrase>\n        <ul>\n          <List>신규 및 현재 인기있는 영화 목록을 살펴보세요</List>\n          <List>영화를 검색하여 상세 정보를 확인하세요</List>\n          <List>즐겁게 본 영화의 리뷰를 작성하여 간직해보세요</List>\n        </ul>\n      </Box>\n    </Base>\n  );\n};\n\nexport default HeroBanner;\n","import MovieListCarousel from \"components/common/MovieListCarousel\";\nimport SkeletonCarousel from \"components/loading/SkeletonCarousel\";\nimport { useGetMainPageMoviesQuery } from \"apis/movie-db-api\";\nimport CarouselBox from \"components/common/CarouselBox\";\n\nconst MovieList = () => {\n  const { data: { nowPlaying, popular, topRated, upcoming } = {}, isFetching } =\n    useGetMainPageMoviesQuery();\n\n  return (\n    <CarouselBox>\n      {isFetching ? (\n        <>\n          <SkeletonCarousel />\n          <SkeletonCarousel />\n          <SkeletonCarousel />\n          <SkeletonCarousel />\n        </>\n      ) : (\n        <>\n          <MovieListCarousel name=\"최근 개봉작\" movieList={nowPlaying} />\n          <MovieListCarousel name=\"인기 상영작\" movieList={popular} />\n          <MovieListCarousel name=\"최고 평점\" movieList={topRated} />\n          <MovieListCarousel name=\"개봉 예정작\" movieList={upcoming} />\n        </>\n      )}\n    </CarouselBox>\n  );\n};\n\nexport default MovieList;\n","import Container from \"components/common/Container\";\nimport HeroBanner from \"components/main/HeroBanner\";\nimport MovieList from \"components/main/MovieList\";\nimport ToTop from \"components/common/ToTop\";\nimport { useCallback, useState } from \"react\";\nimport useIntersectionObserver from \"hooks/useIntersectionObserver\";\n\nconst Main = () => {\n  const [isShowToTop, setIsShowToTop] = useState(false);\n\n  const handleIntersect = useCallback((entry) => {\n    entry[0].isIntersecting ? setIsShowToTop(false) : setIsShowToTop(true);\n  }, []);\n\n  const { setTarget } = useIntersectionObserver({\n    onIntersect: handleIntersect,\n  });\n\n  return (\n    <Container>\n      <HeroBanner target={setTarget} />\n      <MovieList />\n      <ToTop isShow={isShowToTop} />\n    </Container>\n  );\n};\n\nexport default Main;\n"],"names":["Base","styled","Box","ArrowBtn","fontSize","colors","left","right","breakpoint","CarouselList","name","activeIndex","setActiveIndex","itemCount","showCount","children","useState","isShowLeftBtn","setIsShowLeftBtn","isShowRightBtn","setIsShowRightBtn","useEffect","isMobile","onClick","motion","showcount","activeindex","ImgBox","Img","Title","Year","poster_path","title","release_date","id","whileHover","y","to","src","process","alt","initial","opacity","animate","transition","ease","getYear","movieList","length","map","movie","isShow","type","window","scrollTo","CarouselItem","innerWidth","onIntersect","target","setTarget","observer","IntersectionObserver","observe","unobserve","HeroBannerImg","TitleBox","Phrase","List","ref","LogoImg","useGetMainPageMoviesQuery","data","nowPlaying","popular","topRated","upcoming","isFetching","CarouselBox","SkeletonCarousel","MovieListCarousel","isShowToTop","setIsShowToTop","handleIntersect","useCallback","entry","isIntersecting","useIntersectionObserver","Container","ToTop"],"sourceRoot":""}