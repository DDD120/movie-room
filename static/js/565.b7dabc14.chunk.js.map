{"version":3,"file":"static/js/565.b7dabc14.chunk.js","mappings":"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","sources":["components/common/MovieCard.jsx","components/common/ToTop.jsx","hooks/useIntersectionObserver.js","hooks/useScrollRestoration.js","pages/Search.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { colors, fontSize } from \"styles/common\";\nimport { Link } from \"react-router-dom\";\nimport NoImg from \"./NoImg\";\nimport { getYear } from \"lib/filter\";\nimport { motion } from \"framer-motion\";\n\nconst Base = styled.div`\n  cursor: pointer;\n`;\n\nconst ImgBox = styled.div`\n  position: relative;\n  aspect-ratio: 1 / 1.416;\n  width: 100%;\n  overflow: hidden;\n  margin-bottom: 6px;\n  border-radius: 12px;\n`;\n\nconst Img = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  aspect-ratio: 1 / 1.416;\n  border-radius: 12px;\n  object-fit: cover;\n`;\n\nconst Title = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst Year = styled.div`\n  font-size: ${fontSize.sm};\n  color: ${colors.grey};\n`;\n\nconst MovieCard = ({ poster_path, title, release_date, id }) => {\n  return (\n    <motion.div\n      whileHover={{ y: -5 }}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <Link to={`/detail/${id}`}>\n        <Base>\n          <ImgBox>\n            {poster_path ? (\n              <Img\n                src={`${process.env.REACT_APP_THE_MOVIE_DB_IMG_BASE_URL}${poster_path}`}\n                alt={`${title} 포스터`}\n              />\n            ) : (\n              <NoImg />\n            )}\n          </ImgBox>\n          <Title>{title}</Title>\n          <Year>{getYear(release_date)}</Year>\n        </Base>\n      </Link>\n    </motion.div>\n  );\n};\n\nexport default MovieCard;\n","import { RiArrowDropUpLine } from \"react-icons/ri\";\nimport styled from \"@emotion/styled\";\nimport { colors, fontSize } from \"styles/common\";\n\nconst Base = styled.button`\n  position: fixed;\n  right: 30px;\n  bottom: 30px;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  color: ${colors.orange};\n  font-size: ${fontSize.xl};\n  border: none;\n  background-color: ${colors.black};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  z-index: 9;\n  transition: 0.2s;\n  opacity: ${({ isShow }) => (isShow ? 1 : 0)};\n  pointer-events: ${({ isShow }) => (isShow ? \"auto\" : \"none\")};\n  &:hover {\n    color: ${colors.black};\n    background-color: ${colors.orange};\n  }\n`;\n\nconst ToTop = ({ isShow }) => {\n  return (\n    <Base\n      type=\"button\"\n      onClick={() => window.scrollTo(0, 0)}\n      isShow={isShow}\n      aria-label=\"Top 버튼\"\n    >\n      <RiArrowDropUpLine />\n    </Base>\n  );\n};\n\nexport default ToTop;\n","import { useEffect, useState } from \"react\";\n\nconst useIntersectionObserver = ({ onIntersect }) => {\n  const [target, setTarget] = useState(null);\n\n  useEffect(() => {\n    if (!target) return;\n    const observer = new IntersectionObserver(onIntersect);\n    observer.observe(target);\n    return () => observer.unobserve(target);\n  }, [onIntersect, target]);\n\n  return { setTarget };\n};\n\nexport default useIntersectionObserver;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useScrollRestoration = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n};\n\nexport default useScrollRestoration;\n","import styled from \"@emotion/styled\";\nimport Container from \"components/common/Container\";\nimport MovieCard from \"components/common/MovieCard\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FiSearch } from \"react-icons/fi\";\nimport LoadingAnimation from \"components/loading/LoadingAnimation\";\nimport useIntersectionObserver from \"hooks/useIntersectionObserver\";\nimport ToTop from \"components/common/ToTop\";\nimport { useLazyGetSearchQuery } from \"apis/movie-db-api\";\nimport { arrayDeduplication } from \"lib/filter\";\nimport useScrollRestoration from \"hooks/useScrollRestoration\";\nimport Meta from \"components/common/Meta\";\nimport { fontSize } from \"styles/common\";\nimport OgImg from \"assets/defailt-og.png\";\n\nconst Head = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nconst TotalCount = styled.p`\n  padding: 10px;\n`;\n\nconst SearchIcon = styled.span`\n  font-size: ${fontSize.xl};\n  margin: 8px 8px 0 0;\n`;\n\nconst SearchList = styled.div`\n  margin: 20px 0 120px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst SearchItem = styled.div`\n  width: 20%;\n  padding: 4px;\n  flex: 0 0 20%;\n`;\n\nconst ObserverBox = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 100px;\n`;\n\nconst Observer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Search = () => {\n  const location = useLocation();\n  const searchKeyword = new URLSearchParams(location.search).get(\"query\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isShowToTop, setIsShowToTop] = useState(false);\n\n  const [\n    trigger,\n    {\n      data: searchData = {},\n\n      isFetching,\n      isSuccess,\n    },\n  ] = useLazyGetSearchQuery();\n\n  useEffect(() => {\n    if (isSuccess) {\n      setSearchResults((list) => {\n        const serarchList = arrayDeduplication([\n          ...list,\n          ...searchData.results,\n        ]);\n        return serarchList;\n      });\n    }\n  }, [isSuccess, searchData.page, searchData.results]);\n\n  useEffect(() => {\n    trigger({ query: searchKeyword, page: currentPage });\n  }, [trigger, searchKeyword, currentPage]);\n\n  useEffect(() => {\n    setCurrentPage(1);\n    setSearchResults([]);\n  }, [searchKeyword]);\n\n  useScrollRestoration();\n\n  const handleInfiniteIntersect = useCallback(\n    (entry, observer) => {\n      if (entry[0].isIntersecting) {\n        if (\n          searchData.total_pages >= currentPage &&\n          searchData.page === currentPage\n        ) {\n          setCurrentPage((page) => page + 1);\n        }\n        observer.unobserve(entry[0].target);\n      } else {\n      }\n    },\n    [searchData.total_pages, currentPage, searchData.page]\n  );\n\n  const handleToTopIntersect = useCallback((entry) => {\n    entry[0].isIntersecting ? setIsShowToTop(false) : setIsShowToTop(true);\n  }, []);\n\n  const { setTarget: setInfiniteTarget } = useIntersectionObserver({\n    onIntersect: handleInfiniteIntersect,\n  });\n  const { setTarget: setToTopTarget } = useIntersectionObserver({\n    onIntersect: handleToTopIntersect,\n  });\n\n  return (\n    <Container>\n      <Meta\n        title={`${searchKeyword} 검색결과 - MOVIE ROOM`}\n        description={`총 ${searchData.total_results}의 작품이 검색되었습니다.`}\n        keywords={`${searchKeyword}, 영화`}\n        imgsrc={OgImg}\n      />\n      <Head ref={setToTopTarget}>\n        <SearchIcon>\n          <FiSearch />\n        </SearchIcon>\n        <h1>'{searchKeyword}' 검색 결과</h1>\n      </Head>\n      <TotalCount>\n        총 {searchData.total_results}편의 영화가 검색되었습니다.\n      </TotalCount>\n\n      <SearchList>\n        {searchResults.length > 0 &&\n          searchResults.map((movie) => (\n            <SearchItem key={movie.id}>\n              <MovieCard\n                id={movie.id}\n                poster_path={movie.poster_path}\n                title={movie.title}\n                release_date={movie.release_date}\n              />\n            </SearchItem>\n          ))}\n      </SearchList>\n      <ObserverBox>\n        {isFetching ? (\n          <LoadingAnimation />\n        ) : (\n          <Observer ref={setInfiniteTarget}></Observer>\n        )}\n      </ObserverBox>\n      <ToTop isShow={isShowToTop} />\n    </Container>\n  );\n};\n\nexport default Search;\n"],"names":["Base","styled","ImgBox","Img","Title","Year","fontSize","colors","poster_path","title","release_date","id","whileHover","y","initial","opacity","animate","to","src","process","alt","getYear","isShow","type","onClick","window","scrollTo","onIntersect","useState","target","setTarget","useEffect","observer","IntersectionObserver","observe","unobserve","pathname","useLocation","Head","TotalCount","SearchIcon","SearchList","SearchItem","ObserverBox","Observer","location","searchKeyword","URLSearchParams","search","get","searchResults","setSearchResults","currentPage","setCurrentPage","isShowToTop","setIsShowToTop","useLazyGetSearchQuery","trigger","data","searchData","isFetching","isSuccess","list","arrayDeduplication","results","page","query","useScrollRestoration","handleInfiniteIntersect","useCallback","entry","isIntersecting","total_pages","handleToTopIntersect","setInfiniteTarget","useIntersectionObserver","setToTopTarget","description","total_results","keywords","imgsrc","OgImg","ref","length","map","movie"],"sourceRoot":""}