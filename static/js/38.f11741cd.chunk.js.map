{"version":3,"file":"static/js/38.f11741cd.chunk.js","mappings":"8LAIMA,EAAOC,EAAAA,EAAAA,MAAH,+nBASKC,EAAAA,GAAAA,KACOC,EAAAA,GAAAA,OAQSA,EAAAA,GAAAA,OAEQA,EAAAA,GAAAA,QAKnC,qBAAGC,SAEHC,EAAAA,EAAAA,IADM,2OAGgBF,EAAAA,GAAAA,SAe1B,IAJkB,SAAC,GAA2B,IAAzBG,EAAwB,EAAxBA,SAAaC,GAAW,YAC3C,OAAO,SAACP,GAAD,kBAAUM,GAAcC,M,sMChC3BP,EAAOC,EAAAA,EAAAA,IAAH,yHAOJO,EAAOP,EAAAA,EAAAA,IAAH,iGAQJQ,EAAOR,EAAAA,EAAAA,GAAH,iGAEKC,EAAAA,GAAAA,GACJC,EAAAA,GAAAA,OAILO,EAAOT,EAAAA,EAAAA,KAAH,6GAOJU,EAASV,EAAAA,EAAAA,KAAH,mEAsFZ,UAjFc,WACZ,OAIIW,EAAAA,EAAAA,MAHFN,EADF,EACEA,SACAO,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,aAEf,GACEE,EAAAA,EAAAA,MADF,eAAOC,EAAP,gBAAgBC,KAAMC,OAAtB,MAAiC,GAAjC,EAAqCC,EAArC,EAAqCA,UAAWC,EAAhD,EAAgDA,QAASC,EAAzD,EAAyDA,MAGzD,GAA2BC,EAAAA,EAAAA,KACzB,SAACC,GAAD,MAAY,CACVC,WAAYD,EAAME,KAAKD,WACvBE,GAAIH,EAAME,KAAKA,KAAKC,MAEtBC,EAAAA,IALMH,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,GAQdE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA0BjB,OApBAC,EAAAA,EAAAA,YAAU,WACJb,IACFW,EAAS,KACTF,GAASK,EAAAA,EAAAA,IAAW,CAAER,KAAMP,EAASO,SACrCS,EAAAA,EAAAA,GAAS,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAUiB,YAErB,CAACL,EAAUZ,EAAUC,EAAWS,KAEnCI,EAAAA,EAAAA,YAAU,WACM,IAAD,EAATZ,IACFc,EAAAA,EAAAA,GAAS,UAACb,EAAMJ,YAAP,aAAC,EAAYkB,WAEvB,CAACf,EAASC,KAEbW,EAAAA,EAAAA,YAAU,WACJR,GACFM,EAAS,OAAD,OAAQJ,MAEjB,CAACF,EAAYM,EAAUJ,KAGxB,SAAC,IAAD,WACE,UAAC3B,EAAD,YACE,SAACQ,EAAD,WACE,gBAAK6B,IAAKC,EAASC,IAAI,+BAEzB,SAAC9B,EAAD,kCACA,UAACC,EAAD,CAAM8B,SAAU3B,GA/BI,SAAC,GAAyB,IAAvB4B,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClCzB,EAAM,CAAEwB,MAAAA,EAAOC,SAAAA,OA8BX,WACE,SAAC,IAAD,CACEpC,SAAUA,EAAS,QAAS,CAAEqC,UAAU,IACxCC,KAAK,QACLC,MAAM,qBACNC,YAAY,qBACZC,WAAS,KAEX,SAAC,IAAD,CACEzC,SAAUA,EAAS,WAAY,CAAEqC,UAAU,IAC3CC,KAAK,WACLC,MAAM,2BACNC,YAAY,8BAEd,SAAC,IAAD,CACE1C,QAAM,EACNwC,KAAK,SACLC,MAAM,qBACNG,MAAM,qBACNC,SAAUnC,QAGd,SAAC,KAAD,CAAMoC,GAAG,UAAT,UACE,SAACvC,EAAD","sources":["components/common/AuthInput.jsx","pages/Login.jsx"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { colors, fontSize } from \"styles/common\";\n\nconst Base = styled.input`\n  margin: 4px auto;\n  max-width: 600px;\n  width: 100%;\n  border-radius: 50px;\n  padding: 14px 30px;\n  border: none;\n  box-shadow: none;\n  color: #fff;\n  font-size: ${fontSize.base};\n  background-color: ${colors.orange};\n  &::placeholder {\n    color: #fff;\n  }\n  &:-webkit-autofill,\n  :-webkit-autofill:hover,\n  :-webkit-autofill:focus,\n  :-webkit-autofill:active {\n    box-shadow: 0 0 0 1000px ${colors.orange} inset;\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-box-shadow: 0 0 0 1000px ${colors.orange} inset;\n    -webkit-text-fill-color: #fff;\n    -webkit-transition: background-color 5000s ease-in-out 0s;\n  }\n\n  ${({ submit }) =>\n    submit &&\n    css`\n      cursor: pointer;\n      background-color: ${colors.cyan};\n      transition: filter 0.3s;\n      &:hover {\n        filter: brightness(0.9);\n      }\n      &:disabled {\n        filter: grayscale(0.9);\n      }\n    `}\n`;\n\nconst AuthInput = ({ register, ...rest }) => {\n  return <Base {...register} {...rest} />;\n};\n\nexport default AuthInput;\n","import styled from \"@emotion/styled\";\nimport Container from \"components/common/Container\";\nimport { colors, fontSize } from \"styles/common\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useLoginMutation } from \"apis/server-api\";\nimport { useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { login as storeLogin } from \"store/user\";\nimport { useForm } from \"react-hook-form\";\nimport { showToast } from \"lib/toast\";\nimport AuthInput from \"components/common/AuthInput\";\nimport LogoImg from \"assets/logo.png\";\n\nconst Base = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  width: 200px;\n  margin: 40px 0 10px;\n  img {\n    width: 100%;\n  }\n`;\n\nconst Head = styled.h1`\n  font-weight: 700;\n  font-size: ${fontSize.lg};\n  color: ${colors.black};\n  margin: 10px 0;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Signin = styled.span`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nconst Login = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = useForm();\n  const [login, { data: loginRes = {}, isSuccess, isError, error }] =\n    useLoginMutation();\n\n  const { isLoggedIn, id } = useSelector(\n    (state) => ({\n      isLoggedIn: state.user.isLoggedIn,\n      id: state.user.user.id,\n    }),\n    shallowEqual\n  );\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLoginSubmit = ({ email, password }) => {\n    login({ email, password });\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      navigate(\"/\");\n      dispatch(storeLogin({ user: loginRes.user }));\n      showToast(loginRes?.message);\n    }\n  }, [navigate, loginRes, isSuccess, dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      showToast(error.data?.message);\n    }\n  }, [isError, error]);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate(`/my/${id}`);\n    }\n  }, [isLoggedIn, navigate, id]);\n\n  return (\n    <Container>\n      <Base>\n        <Logo>\n          <img src={LogoImg} alt=\"MOVIE ROOM 로고\" />\n        </Logo>\n        <Head>로그인</Head>\n        <Form onSubmit={handleSubmit(handleLoginSubmit)}>\n          <AuthInput\n            register={register(\"email\", { required: true })}\n            type=\"email\"\n            title=\"이메일\"\n            placeholder=\"이메일\"\n            autoFocus\n          />\n          <AuthInput\n            register={register(\"password\", { required: true })}\n            type=\"password\"\n            title=\"비밀번호\"\n            placeholder=\"비밀번호\"\n          />\n          <AuthInput\n            submit\n            type=\"submit\"\n            title=\"로그인\"\n            value=\"로그인\"\n            disabled={isSubmitting}\n          />\n        </Form>\n        <Link to=\"/signup\">\n          <Signin>회원가입</Signin>\n        </Link>\n      </Base>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["Base","styled","fontSize","colors","submit","css","register","rest","Logo","Head","Form","Signin","useForm","handleSubmit","isSubmitting","formState","useLoginMutation","login","data","loginRes","isSuccess","isError","error","useSelector","state","isLoggedIn","user","id","shallowEqual","dispatch","useDispatch","navigate","useNavigate","useEffect","storeLogin","showToast","message","src","LogoImg","alt","onSubmit","email","password","required","type","title","placeholder","autoFocus","value","disabled","to"],"sourceRoot":""}